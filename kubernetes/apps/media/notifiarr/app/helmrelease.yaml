---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app notifiarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/notifiarr/notifiarr
              tag: v0.8.3@sha256:1798fc4236e75c5601b747e367f66a3dd25b412fb834552d2517aced36792be1
            env:
              TZ: ${TIMEZONE}
              # DN_UPSTREAMS_0: "[10.96.0.0/16,10.69.0.0/16]"
              # TMPDIR: /tmp
              # DN_RADARR_0_URL: http://radarr.media.svc.cluster.local
              # DN_SONARR_0_URL: http://sonarr.media.svc.cluster.local
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1G

    defaultPodOptions:
      hostname: k8s-notifiarr
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      main:
        controller: main
        ports:
          http:
            port: 5454

    ingress:
      main:
        enabled: true
        className: traefik-internal
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "network-chain-no-auth@kubernetescrd"
        hosts:
          - host: "notifiarr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - "notifiarr.${SECRET_DOMAIN}"
            secretName: "${SECRET_DOMAIN/./-}-production-tls"
    persistence:
      config:
        enabled: true
        storageClass: nfs-csi     # Dynamic PVC in /kubernetes/appdata
        accessMode: ReadWriteMany
        size: 2Gi
      tmp:
        type: emptyDir
        medium: Memory
