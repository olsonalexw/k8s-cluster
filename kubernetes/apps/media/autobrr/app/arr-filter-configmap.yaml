apiVersion: v1
kind: ConfigMap
metadata:
  name: arr-filter
data:
  arr-filter.sh: |
    #!/bin/sh
    ENDPOINT="$1"
    if [ -z "$ENDPOINT" ]; then
      echo "Error: Provide ENDPOINT as argument" >&2
      exit 1
    fi

    # Debug: Echo vars (remove after test)
    echo "DEBUG: TORRENT_NAME='$TORRENT_NAME'" >&2
    echo "DEBUG: SIZE=$SIZE" >&2
    echo "DEBUG: DOWNLOAD_URL='$DOWNLOAD_URL'" >&2
    echo "DEBUG: INFO_URL='$INFO_URL'" >&2
    echo "DEBUG: PROTOCOL=$PROTOCOL" >&2

    # Build JSON with jq (robust escaping)
    PAYLOAD=$(jq -n \
      --arg title "$TORRENT_NAME" \
      --arg releaseTitle "$TORRENT_NAME" \
      --arg size "$SIZE" \
      --arg indexer "$INDEXER_NAME" \
      --arg downloadUrl "$DOWNLOAD_URL" \
      --arg link "$INFO_URL" \
      --arg protocol "$PROTOCOL" \
      '{
        title: $title,
        releaseTitle: $releaseTitle,
        size: ($size | tonumber // 0),
        indexer: ($indexer // "Unknown"),
        indexerId: 0,
        downloadUrl: $downloadUrl,
        magnetUrl: "",
        link: $link,
        protocol: ($protocol // "torrent"),
        languages: [{id: 1, name: "English"}],
        customFormats: [],
        customFormatScores: [],
        releaseHash: "",
        commentUrl: "",
        publishDate: "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
      }')
    echo "DEBUG: PAYLOAD=$PAYLOAD" >&2

    # Send
    RESPONSE=$(curl -s -X POST "$ENDPOINT" \
      -H "Content-Type: application/json" \
      -d "$PAYLOAD")

    echo "DEBUG: RESPONSE=$RESPONSE" >&2

    # Check (skip if validation error array)
    if echo "$RESPONSE" | jq -e 'type == "array" and .[0].rejected == false' > /dev/null 2>&1; then
      echo "Approved: $TORRENT_NAME" >&2
      exit 0
    else
      echo "Rejected: $TORRENT_NAME" >&2
      echo "$RESPONSE" | jq -r 'if type == "array" then .[0].rejections // empty | .[] else .[] end' >&2 2>/dev/null || echo "Validation error or no details" >&2
      exit 1
    fi
